name: Main

on:
  push:
    branches: [ main ]

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      bump_app: ${{ steps.filter.outputs.bump_app }}
      bump_helm: ${{ steps.filter.outputs.bump_helm }}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
      with:
        ref: main

    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          bump_app:
            - 'src/**'
          bump_helm:
            - 'helm/**'

  bump_build_push:
    needs: detect_changes
    if: needs.detect_changes.outputs.bump_app == 'true' || needs.detect_changes.outputs.bump_helm == 'true'
    name: Bump Version(s)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Bump Application package.json
        if: needs.detect_changes.outputs.bump_app == 'true'
        id: app-version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          minor-wording:  'add,Adds,new'
          major-wording:  'MAJOR,cut-major'
          patch-wording:  'patch,fixes'     # Providing patch-wording will override commits
                                            # defaulting to a patch bump.
          rc-wording:     'RELEASE,alpha'
          skip-commit: 'true'
          skip-tag: 'true'
          skip-push: 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Bump Main Chart Version
        id: chart-version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          minor-wording:  'adds,Adds,new'
          major-wording:  'MAJOR,cut-major'
          patch-wording:  'patch,fixes'     # Providing patch-wording will override commits
                                            # defaulting to a patch bump.
          rc-wording:     'RELEASE,alpha'
          skip-commit: 'true'
          skip-tag: 'true'
          skip-push: 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR:  'helm'
      - name: Update Application Version
        if: needs.detect_changes.outputs.bump_app == 'true'
        run: |
          sed -i 's/^appVersion.*/appVersion: "${{ steps.app-version-bump.outputs.newTag }}"/' helm/hello-gitops/Chart.yaml
          sed -i 's/^version.*/version = "${{ steps.app-version-bump.outputs.newTag }}"/' Cargo.toml
          cat helm/hello-gitops/Chart.yaml
          cat Cargo.toml
      - name: Update Main Chart Version
        id: update_main_chart_version
        run: |
          echo "::set-output name=MAIN_CHART::Helm->${{ steps.chart-version-bump.outputs.newTag }} "
          sed -i 's/^version.*/version: "${{ steps.chart-version-bump.outputs.newTag }}"/' helm/hello-gitops/Chart.yaml
          sed -i 's/version.*/version: "${{ steps.chart-version-bump.outputs.newTag }}"/g' argo/dev/Chart.yaml
          cat helm/hello-gitops/Chart.yaml
          cat argo/dev/Chart.yaml
      - name: Update Chart App Version
        id: update_main_chart_app_version
        if: needs.detect_changes.outputs.bump_app == 'true'
        run: |
          echo "::set-output name=CHART_APP_VERSION::App->${{ steps.app-version-bump.outputs.newTag }}"
          sed -i 's/^appVersion.*/appVersion: "${{ steps.app-version-bump.outputs.newTag }}"/' helm/hello-gitops/Chart.yaml
          cat helm/hello-gitops/Chart.yaml
      - name: Build and push Docker image
        if: needs.detect_changes.outputs.bump_app == 'true'
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/hello-gitops-rust
          tags: ${{ steps.app-version-bump.outputs.newTag }}, latest
      - name: Get Versions
        id: get_versions
        run: |
          echo "::set-output name=APP_VERSION::$(awk -F: '/version/{gsub(/"/,"", $2); print $2}' package.json)"
          echo "::set-output name=HELM_VERSION::$(awk -F: '/version/{gsub(/"/,"", $2); print $2}' helm/package.json)"
      - name: Commit Files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am 'CI: ${{ steps.update_main_chart_version.outputs.MAIN_CHART }}${{ steps.update_main_chart_app_version.outputs.CHART_APP_VERSION }}'
      - name: Tag repo
        if: needs.detect_changes.outputs.bump_app == 'true'
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.app-version-bump.outputs.newTag }}
          message: "CI: bump to new version ${{ steps.app-version-bump.outputs.newTag }}"
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          charts_dir: helm
          branch: gh-pages
          token: ${{ secrets.TOKEN }}
